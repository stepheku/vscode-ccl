<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>ccl</string>
		<string>prg</string>
	</array>
	<key>foldingStartMarker</key>
	<string>\s*\(\s*$</string>
	<key>foldingStopMarker</key>
	<string>^\s*\)</string>
	<key>keyEquivalent</key>
	<string>^~S</string>
	<key>name</key>
	<string>CCL</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#comments</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>CCL Transaction Control Language (TCL) Statements</string>
			<key>match</key>
			<string>(?i)\b(commit|rollback|go)\b</string>
			<key>name</key>
			<string>keyword.other.TCL.ccl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>CCL Data Control Language (DCL) Statements</string>
			<key>match</key>
			<string>(?i)\b(grant|revoke)\b</string>
			<key>name</key>
			<string>keyword.other.DCL.ccl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>CCL Data Definition Language (DDL) Statements - CREATE/DROP PROGRAM</string>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.DDL.ccl</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.DDL.ccl</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.ccl</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.name.user-group.ccl</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?i)\b(create|drop)\b\s+\b(program)\b\s+(\w+)(?:\s*:\s*(\w+))?</string>
			<key>name</key>
			<string>meta.create.ccl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>CCL Data Manipulation Language (DML) Statements</string>
			<key>match</key>
			<string>(?i)\b(select(\s+distinct)?|insert|update|merge|delete|union(\s+all)?|minus|intersect)\b</string>
			<key>name</key>
			<string>keyword.other.DML.ccl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>CCL Data Manipulation Language (DML) Statements - INTO/FROM Clause</string>
			<key>match</key>
			<string>(?i)\b(into|from)\b</string>
			<key>name</key>
			<string>keyword.other.DML.ccl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>CCL Data Manipulation Language (DML) Statements - SELECT Clauses (Simple Clauses)</string>
			<key>match</key>
			<string>(?i)\b(from|plan|join|orjoin|where|and|or|set|group\s+by|having|order(?:\s+by)?|with)\b</string>
			<key>name</key>
			<string>keyword.other.DML.ccl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>CCL Data Manipulation Language (DML) Statements - FROM-JOIN Clause</string>
			<key>match</key>
			<string>(?i)(full|left|right|inner)\s+join\b</string>
			<key>name</key>
			<string>keyword.other.DML.ccl</string>
		</dict>
		<dict>
			<string>CCL Data Manipulation Language (DML) Statements - Miscellaneous</string>
			<key>match</key>
			<string>(?i)\b(in)\b</string>
			<key>name</key>
			<string>keyword.other.DML.ccl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>CCL Data Manipulation Language (DML) Statements - WITH Clauses (Control Options)</string>
			<key>match</key>
			<string>(?i)\b(append|archive|check|cpc|nocpc|compress|constraint|convert|counter|nocounter|crt|curdio|dio|dioduplex|diomargin|expand|filesort|format|noformat|formfeed|forms|noforms|forupdate|forupdatewait|heading|noheading|index|indexunique|landscape|nolandscape|maxcol|maxqual|maxread|maxrec|maxrow|memsort|mine|nullreport|orahint|orahintcbo|organization|owner|outerjoin|pcformat|pivot|preserve|nopreserve|print|rdbarrayfetch|rdbbindcons|nordbbindcons|rdbcboreparse|nordbcboreparse|rdbplan|rdbcbopluszero|nordbcbopluzero|rdbmsmisc|rdbrange|rdbunion|recsort|separator|size|skipbedrock|skiplogdomain|skipreport|sqltype|status|synonym|tablespace|test|time|version)\b</string>
			<key>name</key>
			<string>keyword.other.DML.ccl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>CCL System Variables - CCL Version Number</string>
			<key>match</key>
			<string>(?i)\b(currev|currevminor|currevminor2|currevhnam|curcclrev|curcclver)\b</string>
			<key>name</key>
			<string>support.variable.ccl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>CCL System Variables - CCL Environment</string>
			<key>match</key>
			<string>(?i)\b(cursys|cursys2|curserver|curlocale|curbedrock|curclientid|curbatch|curenv|curimage|curnetdomain|curnode|curdomain|curuser|curgroup|curprcname|curprog|cursource|curmem|curutc|curutcdiff|curscroll|curecho)\b</string>
			<key>name</key>
			<string>support.variable.ccl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>CCL System Variables - Relational Database Settings</string>
			<key>match</key>
			<string>(?i)\b(currdb|currdbaccess|currdbhandle|currdblink|currdbname|currdbopt|currdbsys|currdbuser)\b</string>
			<key>name</key>
			<string>support.variable.ccl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>CCL System Variables - Current Date/Time</string>
			<key>match</key>
			<string>(?i)\b(curclk|curdate|curtime|curtime2|curtime3|curtimezone|curtimezoneapp|curtimezonedef|curtimezonesys|sysdate|systimestamp)\b</string>
			<key>name</key>
			<string>support.variable.ccl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>CCL System Variables - Runtime Data</string>
			<key>match</key>
			<string>(?i)\b(curaccept|curhelp|curendreport|curqual|curreturn|curwork)\b</string>
			<key>name</key>
			<string>support.variable.ccl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>CCL System Variables - ReportWriter Data</string>
			<key>match</key>
			<string>(?i)\b(curpage|col|row|maxcol|maxrow)\b</string>
			<key>name</key>
			<string>support.variable.ccl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>CCL Data Types</string>
			<key>match</key>
			<string>(?i)\b(c\d+|dm12|dq8|f4|f8|u?i1|u?i2|u?i4|vc(?:\d+)?|w8)\b</string>
			<key>name</key>
			<string>storage.type.ccl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>CCL Integer Constants</string>
			<key>match</key>
			<string>\b\d+\b</string>
			<key>name</key>
			<string>constant.numeric.ccl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>CCL Floating-Point Constants</string>
			<key>match</key>
			<string>\b\d+\.\d+\b</string>
			<key>name</key>
			<string>constant.numeric.ccl</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i)\b(as)\b</string>
			<key>name</key>
			<string>keyword.other.alias.ccl</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i)\b(asc|desc)\b</string>
			<key>name</key>
			<string>keyword.other.order.ccl</string>
		</dict>
		<dict>
			<key>match</key>
			<string>[!&lt;&gt;]?=|&lt;|&gt;</string>
			<key>name</key>
			<string>keyword.operator.comparison.ccl</string>
		</dict>
		<dict>
			<key>match</key>
			<string>-|\+|/|\*</string>
			<key>name</key>
			<string>keyword.operator.math.ccl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>CCL Functions - Aggregate Functions</string>
			<key>match</key>
			<string>(?i)\b(count|sum|avg|cube|min|max|median|percent|rollup|stddev|variance)\b</string>
			<key>name</key>
			<string>support.function.aggregate.ccl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>CCL Functions - Bit Functions</string>
			<key>match</key>
			<string>(?i)\b(band|bnot|bor|btest|bxor)\b</string>
			<key>name</key>
			<string>support.function.bit.ccl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>CCL Functions - Math Functions</string>
			<key>match</key>
			<string>(?i)\b(abs|ceil|event|exp|floor|greatest|least|log|log10|maxval|minval|mod|rand)\b</string>
			<key>name</key>
			<string>support.function.math.ccl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>CCL Functions - Misc. Functions (A-B)</string>
			<key>match</key>
			<string>(?i)\b(aesdecryptfile|aesencryptfile|alter|alter2|alterlist|asis|assign|assign2|assign3)\b</string>
			<key>name</key>
			<string>support.function.misc.ccl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>CCL Functions - Misc. Functions (C)</string>
			<key>match</key>
			<string>(?i)\b(calcpos|callprg|cclfmt|cclio|char|check|checkdic|checkfun|checkprg|checkqueue|cost|curcodecover|curprog)\b</string>
			<key>name</key>
			<string>support.function.misc.ccl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>CCL Functions - Misc. Functions (CNVT)</string>
			<key>match</key>
			<string>(?i)\b(cnvtacc|cnvtalias|cnvtalphanum|cnvtbool|cnvtb10B16|cnvtb10b36|cnvtb16b10|cnvtb36b10|cnvthexraw|cnvtint|cnvtjsontorec|cnvtphone|cnvtrawhex|cnvtreal|cnvtrectoxml|cnvtrectojson|cnvtxmltorec)\b</string>
			<key>name</key>
			<string>support.function.misc.ccl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>CCL Functions - Misc. Functions (D-I)</string>
			<key>match</key>
			<string>(?i)\b(decode|error|evaluate|evaluate2|expand|findfile|ichar|initarray|initrec|isnumeric)\b</string>
			<key>name</key>
			<string>support.function.misc.ccl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>CCL Functions - Misc. Functions (L)</string>
			<key>match</key>
			<string>(?i)\b(list|locateval|locatevalsort|logical)\b</string>
			<key>name</key>
			<string>support.function.misc.ccl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>CCL Functions - Misc. Functions (M)</string>
			<key>match</key>
			<string>(?i)\b(maxrec|memalloc|memfree|memrealloc|modcheck|modify|moverec|movereclist)\b</string>
			<key>name</key>
			<string>support.function.misc.ccl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>CCL Functions - Misc. Functions (N)</string>
			<key>match</key>
			<string>(?i)\b(negate|nordbbind|null|nullcheck|nullind|nullterm|nullval)\b</string>
			<key>name</key>
			<string>support.function.misc.ccl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>CCL Functions - Misc. Functions (O)</string>
			<key>match</key>
			<string>(?i)\b(operator|outerjoin)\b</string>
			<key>name</key>
			<string>support.function.misc.ccl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>CCL Functions - Misc. Functions (P)</string>
			<key>match</key>
			<string>(?i)\b(parameter|parameter2|parser|percentile|proxyuser)\b</string>
			<key>name</key>
			<string>support.function.misc.ccl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>CCL Functions - Misc. Functions (R)</string>
			<key>match</key>
			<string>(?i)\b(rdbbind|reflect|remove|renamerec|reportinfo|reportmove|reportrow|round)\b</string>
			<key>name</key>
			<string>support.function.misc.ccl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>CCL Functions - Misc. Functions (S)</string>
			<key>match</key>
			<string>(?i)\b(selectivity|seq|size|sort|sortsearch|sound|soundex|sqlpassthru)\b</string>
			<key>name</key>
			<string>support.function.misc.ccl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>CCL Functions - Misc. Functions (T-W)</string>
			<key>match</key>
			<string>(?i)\b(tdbexecute|text|textlen|trace|type|validate|value|wtmodcheck)\b</string>
			<key>name</key>
			<string>support.function.misc.ccl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>CCL Functions - String Functions (A-B)</string>
			<key>match</key>
			<string>(?i)\b(aesdecrypt|aesencrypt|blobget|blobgetlen|build|build2)\b</string>
			<key>name</key>
			<string>support.function.string.ccl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>CCL Functions - String Functions (C)</string>
			<key>match</key>
			<string>(?i)\b(cnvtcap|cnvtlower|cnvtnls|cnvtnlssort|cnvtstring|cnvtstringchk|cnvtuplper|concat|curfile|curlocale)\b</string>
			<key>name</key>
			<string>support.function.string.ccl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>CCL Functions - String Functions (F-Z)</string>
			<key>match</key>
			<string>(?i)\b(fillstring|findstring|format|movestring|notrim|nopatstring|patstring|piece|replace|substring|text|trim|trimbind)\b</string>
			<key>name</key>
			<string>support.function.string.ccl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>CCL Functions - Temporal Functions</string>
			<key>match</key>
			<string>(?i)\b(cnvtdate|cnvtdate2|cnvtdatetime|cnvtdatetime2|cnvtdatetimerdb|cnvtdatetimeutc|cnvtdatetimeutc2)\b</string>
			<key>name</key>
			<string>support.function.temporal.ccl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>CCL Functions - Temporal Functions</string>
			<key>match</key>
			<string>(?i)\b(cnvtage|cnvtage2|cnvtagedatetime|cnvtlookahead|cnvtlookbehind|cnvtmin|cnvtmin2|cnvttime|cnvttime2|cnvttimestamp)\b</string>
			<key>name</key>
			<string>support.function.temporal.ccl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>CCL Functions - Temporal Functions</string>
			<key>match</key>
			<string>(?i)\b(datetimeadd|datetimecmp|datetimecmputc|datetimediff|datetimefind|datetimepart|datetimetrunc)\b</string>
			<key>name</key>
			<string>support.function.temporal.ccl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>CCL Functions - Temporal Functions</string>
			<key>match</key>
			<string>(?i)\b(datetimezone|datetimezonebyindex|datetimezonebyname|datetimezoneformat|datetimezone|utc)\b</string>
			<key>name</key>
			<string>support.function.temporal.ccl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>CCL Functions - Temporal Functions</string>
			<key>match</key>
			<string>(?i)\b(day|hour|julian|minute|month|weekday|year)\b</string>
			<key>name</key>
			<string>support.function.temporal.ccl</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>CCL Functions - UAR Functions</string>
			<key>match</key>
			<string>(?i)\b(uar_get_code_by|uar_get_code_description|uar_get_code_display|uar_get_code_meaning|uar_get_meaning_by_codeset)\b</string>
			<key>name</key>
			<string>support.function.uar.ccl</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#strings</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.ccl</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(;).*$\n?</string>
					<key>name</key>
					<string>comment.line.semicolon.ccl</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.ccl</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(!)[^=]?.*$\n?</string>
					<key>name</key>
					<string>comment.line.exclamation-mark.ccl</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.ccl</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.ccl</string>
				</dict>
			</array>
		</dict>
		<key>string_escape</key>
		<dict>
			<key>match</key>
			<string>\\.</string>
			<key>name</key>
			<string>constant.character.escape.ccl</string>
		</dict>
		<key>string_interpolation</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.ccl</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(#\{)([^\}]*)(\})</string>
			<key>name</key>
			<string>string.interpolated.ccl</string>
		</dict>
		<key>strings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.ccl</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.ccl</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>this is faster than the next begin/end rule since sub-pattern will match till end-of-line and SQL files tend to have very long lines.</string>
					<key>match</key>
					<string>(')[^'\\]*(')</string>
					<key>name</key>
					<string>string.quoted.single.ccl</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>'</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.ccl</string>
						</dict>
					</dict>
					<key>end</key>
					<string>'</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.ccl</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.ccl</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string_escape</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.ccl</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.ccl</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>this is faster than the next begin/end rule since sub-pattern will match till end-of-line and SQL files tend to have very long lines.</string>
					<key>match</key>
					<string>(`)[^`\\]*(`)</string>
					<key>name</key>
					<string>string.quoted.other.backtick.ccl</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>`</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.ccl</string>
						</dict>
					</dict>
					<key>end</key>
					<string>`</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.ccl</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.other.backtick.ccl</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string_escape</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.ccl</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.ccl</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>this is faster than the next begin/end rule since sub-pattern will match till end-of-line and SQL files tend to have very long lines.</string>
					<key>match</key>
					<string>(")[^"#]*(")</string>
					<key>name</key>
					<string>string.quoted.double.ccl</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.ccl</string>
						</dict>
					</dict>
					<key>end</key>
					<string>"</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.ccl</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.ccl</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string_interpolation</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>%\{</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.ccl</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\}</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.ccl</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.other.quoted.brackets.ccl</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string_interpolation</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.ccl</string>
	<key>uuid</key>
	<string>B8887E40-CC80-11E3-9C1A-0800200C9A66</string>
</dict>
</plist>
